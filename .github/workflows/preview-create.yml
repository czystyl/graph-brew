name: Create Preview Environment

on:
  pull_request:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

permissions:
  pull-requests: write
  issues: write

jobs:
  generate-preview-url:
    name: Generate preview URL
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.generate-preview-url.outputs.url }}
    steps:
      - name: Generate Branch Preview URL
        id: generate-preview-url
        run: |
          BRANCH_SHA=$(echo ${{ steps.extract_branch.outputs.branch }} | sha256sum | cut -c5-38)
          echo "url=$BRANCH_SHA.vercel.app" >> $GITHUB_OUTPUT
  app-test:
    runs-on: ubuntu-latest
    steps:
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl apps list
      - run: echo e${{ secrets.FLY_API_TOKEN }}elo

  test-test:
    uses: ./.github/workflows/preview-database.yml
    with:
      preview-url: "test123"

  # prepare-preview-state:
  #   name: Prepare preview state
  #   runs-on: ubuntu-latest
  #   outputs:
  #     url: ${{ steps.vercel-preview-url.outputs.vercel_preview_url }}
  #   steps:
  #     - name: Find preview deployment comment
  #       uses: peter-evans/find-comment@v2
  #       if: success() && github.event.number
  #       id: preview-comment
  #       with:
  #         issue-number: ${{ github.event.number }}
  #         body-includes: <!-- __VERCEL_DEPLOYMENT__ -->

  #     - name: Get current preview environment url
  #       id: vercel-preview-url
  #       run: |
  #         REGEX="(<!-- __VERCEL_PREVIEW_URL: )(.*)( -->)"
  #         COMMENT_BODY="${{ steps.preview-comment.outputs.comment-body }}"

  #         if [[ $COMMENT_BODY =~ $REGEX ]]; then
  #             echo "vercel_preview_url=${BASH_REMATCH[2]}" >> $GITHUB_OUTPUT
  #         else
  #             echo "No previous Preview Environment. SKip!"
  #         fi

  #     - name: Create or update preview environment comment
  #       uses: peter-evans/create-or-update-comment@v2
  #       with:
  #         comment-id: ${{ steps.preview-comment.outputs.comment-id }}
  #         issue-number: ${{ github.event.pull_request.number }}
  #         body: |
  #           ## üèóÔ∏è Building preview environment...
  #           <!-- __VERCEL_DEPLOYMENT__ -->
  #         edit-mode: replace

  # deploy-preview:
  #   name: Deploy preview environment
  #   runs-on: ubuntu-latest
  #   outputs:
  #     url: ${{ steps.deploy.outputs.url }}
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: pnpm/action-setup@v2
  #       name: Install pnpm
  #       id: pnpm-install
  #       with:
  #         version: 7
  #         run_install: false

  #     - name: Get pnpm store directory
  #       id: pnpm-cache
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

  #     - uses: actions/cache@v3
  #       name: Setup pnpm cache
  #       with:
  #         path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Install Vercel CLI
  #       run: pnpm add vercel@latest --global

  #     - name: Pull Vercel Preview  Environment Information
  #       run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

  #     - name: Replace Environment Variables
  #       run: |
  #         # WIP!
  #         sed -i '/^NEXT_PUBLIC_ALL_ENV=/s/=.*/="33213123!"/' .vercel/.env.preview.local

  #     - name: Build Project Artifacts
  #       run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

  #     - name: Deploy Project Artifacts to Vercel
  #       id: deploy
  #       run: |
  #         DOMAIN=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
  #         echo "url=${DOMAIN}" >> $GITHUB_OUTPUT

  # alias-preview:
  #   name: Add environment URL alias
  #   runs-on: ubuntu-latest
  #   needs:
  #     - deploy-preview
  #     - generate-preview-url
  #   steps:
  #     - name: Alias current deployment
  #       run: |
  #         vercel alias \
  #           ${{ needs.deploy-preview.outputs.url }} \
  #           ${{ needs.generate-preview-url.outputs.url }} \
  #           --token=${{ secrets.VERCEL_TOKEN }}

  # remove-old-preview:
  #   name: Remove old environment
  #   runs-on: ubuntu-latest
  #   needs:
  #     - alias-preview
  #     - prepare-preview-state
  #   steps:
  #     - name: Remove previous preview environment
  #       run: |
  #         VERCEL_PREVIEW_URL="${{ needs.prepare-preview-state.outputs.url }}"

  #         if [ $VERCEL_PREVIEW_URL ]; then
  #             vercel remove $VERCEL_PREVIEW_URL --yes --token=${{ secrets.VERCEL_TOKEN }}
  #         else
  #             echo "No previous Preview Environment"
  #         fi

  # update-deployment-comment:
  #   name: Update preview state
  #   runs-on: ubuntu-latest
  #   needs:
  #     - alias-preview
  #     - generate-preview-url
  #   steps:
  #     - name: Find preview environment comment to update
  #       uses: peter-evans/find-comment@v2
  #       if: success() && github.event.number
  #       id: preview-comment
  #       with:
  #         issue-number: ${{ github.event.number }}
  #         body-includes: <!-- __VERCEL_DEPLOYMENT__ -->

  #     - name: Create or update preview link comment
  #       uses: peter-evans/create-or-update-comment@v2
  #       with:
  #         comment-id: ${{ steps.preview-comment.outputs.comment-id }}
  #         issue-number: ${{ github.event.pull_request.number }}
  #         edit-mode: replace
  #         body: |
  #           ## [üöÄ Your preview environment is ready!](https://${{ needs.generate-preview-url.outputs.url }})
  #           <!-- __VERCEL_DEPLOYMENT__ -->
  #           <!-- __VERCEL_PREVIEW_URL: ${{ steps.vercel-preview.outputs.VERCEL_PREVIEW_URL }} -->
